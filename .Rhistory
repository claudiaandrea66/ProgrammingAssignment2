cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cacheSolve <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setmean(m)
m
}
matriz<-rbind(c(1,-1/4),c(-1/4,1))
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- matriz
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cacheSolve <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setmean(m)
m
}
makeCacheMatrix()
cacheSolve()
cacheSolve(matriz)
matriz
cacheSolve <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setmean(m)
m
}
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- matriz
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeCacheMatrix()
makeCacheMatrix(matriz)
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- matriz
getmean <- function() m
salida<-list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeCacheMatrix(matriz)
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- matriz
getmean <- function() m
salida<-list(set = set, get = get,
setmean = setmean,
getmean = getmean)
print(salida)
}
makeCacheMatrix(matriz)
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- matriz
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(x)
mean(x)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
print(setmean)
}
makeVector(x)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean()
cachemean(x)
y<-x
y
makeVector()
makeVector(y)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
print(x)
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
print(setmean)
}
makeVector(y)
makeVector()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(vector) {
x <<- vector
print(x)
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
print(setmean)
}
makeVector()
g <- function() vector
g
g(vector)
vector<-1:4
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(vector) {
x <<- vector
print(x)
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
print(setmean)
}
vector
vector_sal<-makeVectro()
vector_sal<-makeVector()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(vector) {
x <<- vector
##print(x)
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
##print(setmean)
}
vector_sal<-makeVector()
vector_sal
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(vector) {
x <<- vector
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
vector_sal<-makeVector()
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(vector_sal)
matriz<-rbind(1:4,5:8)
solve(matriz)
matriz<-cbind(1:4,5:8)
solve(matriz)
matriz
matriz<-cbind(1:2,5:6)
solev(matriz)
solve(matriz)
matriz<-cbind(1:2,5:6)
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- matriz
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(matriz) {
x <<- matriz
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- matriz
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
matriz_esp<-makeCacheMatrix()
matriz_esp
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(matriz) {
x <<- matriz
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cacheSolve <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setmean(m)
m
}
cacheSolve(matriz_esp)
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(matriz) {
x <<- matriz
m <<- NULL
}
get <- function() x
##setmean <- function(mean) m <<- mean
##getmean <- function() m
list(set = set, get = get) ##,
##setmean = setmean,
##getmean = getmean)
}
matriz_esp<-makeCacheMatrix()
matriz_esp
$ser
$set
matriz_esp<-makeCacheMatrix(x)
matriz_esp
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(matriz) {
x <<- matriz
m <<- NULL
}
get <- function() x
setmean <- function(solve) m <<- solve
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
matriz_esp<-makeCacheMatrix(x)
matriz_esp
mean<-solve(matriz)
matriz_esp<-makeCacheMatrix(x)
matriz_esp
inversa<-solve(matriz)
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(matriz) {
x <<- matriz
m <<- NULL
}
get <- function() x
setmean <- function(inversa) m <<- inversa
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
matriz
inversa
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(matriz) {
x <<- matriz
m <<- NULL
}
get <- function() x
setmean <- function(inversa) m <<- inversa
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
lista<-makeCacheMatrix(x)
lista<-makeCacheMatrix()
lista
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(matriz) {
x <<- matriz
m <<- NULL
}
get <- function() x
setmean <- function(inversa) m <<- inversa
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(matriz) {
x <<- matriz
m <<- NULL
}
get <- function() x
setmean <- function(inversa) m <<- inversa
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
matriz_esp<-makeCacheMatrix(matriz)
matriz_esp
cacheSolve <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setmean(m)
m
}
cacheSolve(matriz_esp)
matriz<-disg(4)
matriz<-diag(4)
matriz
matriz_esp<-makeCacheMatrix(matriz)
cacheSolve(matriz_esp)
matriz<-diag(6)
matriz_esp<-makeCacheMatrix(matriz)
cacheSolve(matriz_esp)
cacheSolve(matriz)
cacheSolve(matriz_esp)
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(inversa) m <<- inversa
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
matriz_esp<-makeCacheMatrix(matriz)
cacheSolve(matriz_esp)
matriz<-diag(8)
matriz_esp<-makeCacheMatrix(matriz)
cacheSolve(matriz_esp)
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(inversa) m <<- inversa
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cacheSolve <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setmean(m)
m
}
matriz<-diag(8)
matriz_esp<-makeCacheMatrix(matriz)
cacheSolve(matriz_esp)
e<<-casa
e=NULL
e<<-casa
if(!is.null(e)){}
if(!is.null(e)){ print(error)}
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(inverse) m <<- inverse
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
matriz<-diag(8)
matriz_esp<-makeCacheMatrix(matriz)
cacheSolve(matriz_esp)
setwd("~/Dropbox/Documentos_USB/CURSO_COURSERA/R_PROGRAMMING/SEMANA_3/PROGRAMMING_ASIGGNMENT/ProgrammingAssignment2")
